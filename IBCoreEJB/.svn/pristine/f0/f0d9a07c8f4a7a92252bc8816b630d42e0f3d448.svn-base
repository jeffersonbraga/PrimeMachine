package br.com.opsocial.ejb.entity.sets;

import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import br.com.opsocial.ejb.entity.generic.Persistent;

@Entity
@Table(name="posts", schema="opsocial")
public class Post extends Persistent {

	private static final long serialVersionUID = 1L;
	
	public static final Character POSTED = 'T';
	public static final Character NOT_POSTED = 'F';
	public static final Character ERROR_POSTING = 'E';
	public static final Character POSTING = 'P';
	
	public static final Character APPEND_VIDEO = 'V';
	public static final Character APPEND_PICTURE = 'P';
	public static final Character APPEND_ALBUM = 'A';
	public static final Character APPEND_RESUME = 'R';
	public static final Character APPEND_STORY = 'S';
	
	public static final Character TIMELINE_FEED = 'T';
	public static final Character STORY_FEED = 'S';
	
	@Id
	@Column(name = "idpost")
	@GeneratedValue(strategy = GenerationType.IDENTITY, generator = "post_idpost_seq")
	private Long idPost;
	
	@Column(name="text")
	private String text;
	
	@Transient
	private String formattedPost;

	@Column(name="appendtype")
	private Character appendType;

	@Column(name="posted")
	private Character posted = 'F';

	@Column(name="postDate")
    @Temporal(TemporalType.TIMESTAMP)
	private Date postDate;

	@Column(name="picture")
	private String picture;
	
	@Column(name="pictureheight")
	private String pictureHeight;

	@Column(name="picturewidth")
	private String pictureWidth;
	
	@Column(name="title")
	private String title;

	@Column(name="link")
	private String link;

	@Column(name="description")
	private String description;
	
	@Column(name = "videoname")
	private String videoName;
	
	@Column(name = "videosize")
	private Long videoSize;
	
	@Column(name = "videoextension")
	private String videoExtension;
	
	@Column(name = "videoduration")
	private Double videoDuration;
	
	@Column(name = "countpostingattempts")
	private Integer countPostingAttempts;
	
	@Column(name = "targetfeed")
	private Character targetFeed;
	
	@Transient
	private String originalLink;
	
	@JoinColumn(name = "idset", referencedColumnName = "idset")
	@ManyToOne()
	private Sets set;
	
	@OneToMany(cascade = CascadeType.ALL, mappedBy = "post", fetch=FetchType.EAGER)
	@OrderBy("idPostAttachment desc")
	private List<PostAttachment> postsAttachments;
	
	public Post() {
	}

	public Long getIdPost() {
		return idPost;
	}

	public void setIdPost(Long idPost) {
		this.idPost = idPost;
	}

	public String getText() {
		return text;
	}

	public void setText(String text) {
		this.text = text;
	}

	public String getFormattedPost() {
		return formattedPost;
	}

	public void setFormattedPost(String formattedPost) {
		this.formattedPost = formattedPost;
	}

	public Character getAppendType() {
		return appendType;
	}

	public void setAppendType(Character appendType) {
		this.appendType = appendType;
	}

	public Character getPosted() {
		return posted;
	}

	public void setPosted(Character posted) {
		this.posted = posted;
	}

	public Date getPostDate() {
		return postDate;
	}

	public void setPostDate(Date postDate) {
		this.postDate = postDate;
	}

	public String getPicture() {
		return picture;
	}

	public void setPicture(String picture) {
		this.picture = picture;
	}

	public String getPictureHeight() {
		return pictureHeight;
	}

	public void setPictureHeight(String pictureHeight) {
		this.pictureHeight = pictureHeight;
	}

	public String getPictureWidth() {
		return pictureWidth;
	}

	public void setPictureWidth(String pictureWidth) {
		this.pictureWidth = pictureWidth;
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getLink() {
		return link;
	}

	public void setLink(String link) {
		this.link = link;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public Sets getSet() {
		return set;
	}

	public void setSet(Sets set) {
		this.set = set;
	}
	
	public String getOriginalLink() {
		return originalLink;
	}

	public void setOriginalLink(String originalLink) {
		this.originalLink = originalLink;
	}

	public String getVideoName() {
		return videoName;
	}

	public void setVideoName(String videoName) {
		this.videoName = videoName;
	}

	public Long getVideoSize() {
		return videoSize;
	}

	public void setVideoSize(Long videoSize) {
		this.videoSize = videoSize;
	}

	public String getVideoExtension() {
		return videoExtension;
	}

	public void setVideoExtension(String videoExtension) {
		this.videoExtension = videoExtension;
	}

	public Double getVideoDuration() {
		return videoDuration;
	}

	public void setVideoDuration(Double videoDuration) {
		this.videoDuration = videoDuration;
	}

	public Integer getCountPostingAttempts() {
		return countPostingAttempts;
	}

	public void setCountPostingAttempts(Integer countPostingAttempts) {
		this.countPostingAttempts = countPostingAttempts;
	}

	public List<PostAttachment> getPostsAttachments() {
		return postsAttachments;
	}

	public void setPostsAttachments(List<PostAttachment> postsAttachments) {
		this.postsAttachments = postsAttachments;
	}

	public Character getTargetFeed() {
		return targetFeed;
	}

	public void setTargetFeed(Character targetFeed) {
		this.targetFeed = targetFeed;
	}

	@Override
	public Long getId() {
		return idPost;
	}
	
	@Override
	public void setId(Long id) {
		idPost = id;
	}
}
