package br.com.opsocial.server.utils.reports.xls;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;

import org.apache.commons.lang3.RandomStringUtils;
import org.apache.poi.common.usermodel.Hyperlink;
import org.apache.poi.hssf.usermodel.HSSFPalette;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CreationHelper;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.util.CellRangeAddress;

import br.com.opsocial.client.entity.report.facebook.FaceReportPostDTO;
import br.com.opsocial.client.entity.report.facebook.FacebookInfluentialUserDTO;
import br.com.opsocial.client.entity.report.facebook.FanPageGrowth;
import br.com.opsocial.client.entity.report.facebook.ReportDetailedFacebookDTO;
import br.com.opsocial.client.entity.report.facebook.ReportFacebookCityDTO;
import br.com.opsocial.client.entity.report.facebook.ReportFacebookHistoricalDTO;
import br.com.opsocial.server.services.ServicesImpl;
import br.com.opsocial.ejb.entity.application.Profile;

public class ReportFacebookHistoricalXLS {

	private ReportFacebookHistoricalDTO reportFacebookHistorical;
	private Profile profile;

	private String reportsPath;
	private String fileName;
	private String formattedFileName;

	private HSSFWorkbook wb;
	private Sheet sheetHistorical;

	private CreationHelper createHelper;

	private CellStyle cellStyleHeader;
	private CellStyle cellStyleHeaderData;
	private CellStyle cellStyleHeaderDataPositive;
	private CellStyle cellStyleHeaderDataNegative;
	private CellStyle cellSecondaryHeaderData;
	private CellStyle cellSecondaryHeaderNumber;
	private CellStyle cellSecondaryHeaderCenter;
	private CellStyle cellDateStyle;
	private CellStyle cellStylePreAnalysis;
	private CellStyle cellStylePreAnalysisResult;
	private CellStyle cellStyleHLink;
	private CellStyle cellDataPercentage;

	private Font fontHeader;
	private Font fontHeaderData;

	private Float headerDataRowHeight;
	
	private int rowSheetHistoricalCount;

	public ReportFacebookHistoricalXLS(ReportFacebookHistoricalDTO reportFacebookHistorical, Profile profile) {
		this.reportFacebookHistorical = reportFacebookHistorical;
		this.profile = profile;
	}
	
	public void createXLS() {
		
		wb = new HSSFWorkbook();
		
		initiateDefautStyles();
		
		this.reportsPath = ServicesImpl.context.getInitParameter("getDirReporstXLS");
		this.fileName = String.valueOf(RandomStringUtils.randomAlphanumeric(8) + ".xls");
		
		sheetHistorical = wb.createSheet("Facebook Histórico");
		
		headerDataRowHeight = 1.2F * sheetHistorical.getDefaultRowHeightInPoints();
		
		addMainHeader(sheetHistorical, profile.getScreenName() + " - Relatório Facebook - Histórico", 6);
		
		addFanPageGrowth();
		addAboutYourFans();
		addAboutReachedUsers();
		addCitiesStats();
		addInfluentFans();
		addEngagementWithContent();
		addPostsMostEngaged();
		
		sheetHistorical.setDefaultColumnWidth(25);
		sheetHistorical.setColumnWidth(0, 8000);
		
		try {
			
			File reportFile = new File(reportsPath, fileName);
			FileOutputStream fileOut = new FileOutputStream(reportFile);
			wb.write(fileOut);
			fileOut.close();
			
			formattedFileName = profile.getScreenName() + "-facebook-historico";
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
	private void addPostsMostEngaged() {
		
		rowSheetHistoricalCount += 2;
		Row rowPostsMostEngagedTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowPostsMostEngagedTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellPostsMostEngagedTitle = rowPostsMostEngagedTitle.createCell(0);
		cellPostsMostEngagedTitle.setCellValue("POSTS COM MAIOR ENGAJAMENTO");
		cellPostsMostEngagedTitle.setCellStyle(cellStyleHeaderData);
		
		sheetHistorical.addMergedRegion(new CellRangeAddress(rowSheetHistoricalCount, rowSheetHistoricalCount, 0, 6));
		
		rowSheetHistoricalCount++;
		Row rowPostSubTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowPostSubTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellPostDateTitle = rowPostSubTitle.createCell(0);
		cellPostDateTitle.setCellValue("Data");
		cellPostDateTitle.setCellStyle(cellSecondaryHeaderData);
		
		Cell cellPostURLTitle = rowPostSubTitle.createCell(1);
		cellPostURLTitle.setCellValue("Post");
		cellPostURLTitle.setCellStyle(cellSecondaryHeaderData);
		
		Cell cellPostReachTitle = rowPostSubTitle.createCell(2);
		cellPostReachTitle.setCellValue("Alcance");
		cellPostReachTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		Cell cellPostClicksTitle = rowPostSubTitle.createCell(3);
		cellPostClicksTitle.setCellValue("Cliques");
		cellPostClicksTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		Cell cellPostInteractionsTitle = rowPostSubTitle.createCell(4);
		cellPostInteractionsTitle.setCellValue("Interações");
		cellPostInteractionsTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		Cell cellPostEngagementTitle = rowPostSubTitle.createCell(5);
		cellPostEngagementTitle.setCellValue("Engajamento");
		cellPostEngagementTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		rowSheetHistoricalCount++;
		for(FaceReportPostDTO faceReportPost : reportFacebookHistorical.getPostsMostEngaged()) {
			
			Row rowPostValues = sheetHistorical.createRow(rowSheetHistoricalCount);

			Cell cellPostDateValue = rowPostValues.createCell(0);
			cellPostDateValue.setCellValue(new SimpleDateFormat("dd/MM/yyyy").format(faceReportPost.getCreatedTime()));
			
			Hyperlink hyperLink = createHelper.createHyperlink(Hyperlink.LINK_URL);
    		hyperLink.setAddress(faceReportPost.getPermalink());
			
			Cell cellPostURLValue = rowPostValues.createCell(1);
			cellPostURLValue.setCellValue(faceReportPost.getPermalink());
			cellPostURLValue.setHyperlink((org.apache.poi.ss.usermodel.Hyperlink) hyperLink);
			cellPostURLValue.setCellStyle(cellStyleHLink);
			
			Cell cellPostReachValue = rowPostValues.createCell(2);
			cellPostReachValue.setCellValue(faceReportPost.getPostInsights().get(FaceReportPostDTO.POST_IMPRESSIONS_UNIQUE));
			
			Cell cellPostClicksValue = rowPostValues.createCell(3);
			cellPostClicksValue.setCellValue(faceReportPost.getPostInsights().get(FaceReportPostDTO.POST_CONSUMPTIONS));
			
			Cell cellPostInteractionsValue = rowPostValues.createCell(4);
			cellPostInteractionsValue.setCellValue(faceReportPost.getPostInsights().get(FaceReportPostDTO.POST_STORIES));
			
			Cell cellPostEngagementValue = rowPostValues.createCell(5);
			cellPostEngagementValue.setCellValue(faceReportPost.getEngagement().toString().replace('.',',') + "%");
			cellPostEngagementValue.setCellStyle(cellDataPercentage);
			
			rowSheetHistoricalCount++;
		}
		
	}
	
	private void addEngagementWithContent() {
		
		rowSheetHistoricalCount++;
		Row rowEngagWithContentTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowEngagWithContentTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellEngagWithContentTitle = rowEngagWithContentTitle.createCell(0);
		cellEngagWithContentTitle.setCellValue("ENVOLVIMENTO COM O CONTEÚDO");
		cellEngagWithContentTitle.setCellStyle(cellStyleHeaderData);
		
		sheetHistorical.addMergedRegion(new CellRangeAddress(rowSheetHistoricalCount, rowSheetHistoricalCount, 0, 6));
		
		rowSheetHistoricalCount++;
		Row rowEngagWithContentSubTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowEngagWithContentSubTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellEngagWithContentDateTitle = rowEngagWithContentSubTitle.createCell(0);
		cellEngagWithContentDateTitle.setCellValue("Mês e ano");
		cellEngagWithContentDateTitle.setCellStyle(cellSecondaryHeaderData);
		
		Cell cellEngagWithLikesTitle = rowEngagWithContentSubTitle.createCell(1);
		cellEngagWithLikesTitle.setCellValue("Curtir");
		cellEngagWithLikesTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		Cell cellEngagWithCommentsTitle = rowEngagWithContentSubTitle.createCell(2);
		cellEngagWithCommentsTitle.setCellValue("Comentários");
		cellEngagWithCommentsTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		Cell cellEngagWithSharesTitle = rowEngagWithContentSubTitle.createCell(3);
		cellEngagWithSharesTitle.setCellValue("Compartilhamentos");
		cellEngagWithSharesTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		Cell cellEngagWithClicksTitle = rowEngagWithContentSubTitle.createCell(4);
		cellEngagWithClicksTitle.setCellValue("Cliques");
		cellEngagWithClicksTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		Cell cellSingleReachTitle = rowEngagWithContentSubTitle.createCell(5);
		cellSingleReachTitle.setCellValue("Alcance único");
		cellSingleReachTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		Cell cellTotalImpressionsTitle = rowEngagWithContentSubTitle.createCell(6);
		cellTotalImpressionsTitle.setCellValue("Visualizações totais");
		cellTotalImpressionsTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		rowSheetHistoricalCount++;
		for (int i = 0; i < reportFacebookHistorical.getSingleReach().size(); i++) {
			
			Row rowEngagWithContentValues = sheetHistorical.createRow(rowSheetHistoricalCount);

			Cell cellEngagWithContentDateValue = rowEngagWithContentValues.createCell(0);
			cellEngagWithContentDateValue.setCellValue(reportFacebookHistorical.getSingleReach().get(i).getMonth() + "/" +
												   reportFacebookHistorical.getSingleReach().get(i).getYear());
			
			Cell cellEngagWithLikesValue = rowEngagWithContentValues.createCell(1);
			cellEngagWithLikesValue.setCellValue(reportFacebookHistorical.getLikesByMonth().get(i).getSum());
			
			Cell cellEngagWithCommentsValue = rowEngagWithContentValues.createCell(2);
			cellEngagWithCommentsValue.setCellValue(reportFacebookHistorical.getCommentsByMonth().get(i).getSum());
			
			Cell cellEngagWithSharesValue = rowEngagWithContentValues.createCell(3);
			cellEngagWithSharesValue.setCellValue(reportFacebookHistorical.getSharesByMonth().get(i).getSum());
			
			Cell cellEngagWithClicksValue = rowEngagWithContentValues.createCell(4);
			cellEngagWithClicksValue.setCellValue(reportFacebookHistorical.getClicksByMonth().get(i).getSum());
			
			Cell cellSingleReachValue = rowEngagWithContentValues.createCell(5);
			cellSingleReachValue.setCellValue(reportFacebookHistorical.getSingleReach().get(i).getSum());
			
			Cell cellTotalImpressionsValue = rowEngagWithContentValues.createCell(6);
			cellTotalImpressionsValue.setCellValue(reportFacebookHistorical.getTotalImpressions().get(i).getSum());
			
			rowSheetHistoricalCount++;
		}
		
		rowSheetHistoricalCount++;
		Row rowMostEngagementMonth = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowMostEngagementMonth.setHeightInPoints(headerDataRowHeight);
		
		Cell cellMostEngagementMonthTitle = rowMostEngagementMonth.createCell(0);
		cellMostEngagementMonthTitle.setCellValue("Maior envolvimento:");
		cellMostEngagementMonthTitle.setCellStyle(cellStylePreAnalysis);
		
		Cell cellMostEngagementMonthValue = rowMostEngagementMonth.createCell(1);
		cellMostEngagementMonthValue.setCellValue(reportFacebookHistorical.getMostEngagementMonth().getMonth() + "/" + 
				reportFacebookHistorical.getMostEngagementMonth().getYear());
		cellMostEngagementMonthValue.setCellStyle(cellStylePreAnalysisResult);
		
		rowSheetHistoricalCount++;
		Row rowMostReachedMonth = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowMostReachedMonth.setHeightInPoints(headerDataRowHeight);
		
		Cell cellMostReachedMonthTitle = rowMostReachedMonth.createCell(0);
		cellMostReachedMonthTitle.setCellValue("Maior alcance:");
		cellMostReachedMonthTitle.setCellStyle(cellStylePreAnalysis);
		
		Cell cellMostReachedMonthValue = rowMostReachedMonth.createCell(1);
		cellMostReachedMonthValue.setCellValue(reportFacebookHistorical.getMostReachedMonth().getMonth() + "/" + 
				reportFacebookHistorical.getMostReachedMonth().getYear());
		cellMostReachedMonthValue.setCellStyle(cellStylePreAnalysisResult);
	}
	
	private void addInfluentFans() {
		
		rowSheetHistoricalCount++;
		Row rowInfluentFansTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowInfluentFansTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellInfluentFansTitle = rowInfluentFansTitle.createCell(0);
		cellInfluentFansTitle.setCellValue("FÃS MAIS INFLUENTES");
		cellInfluentFansTitle.setCellStyle(cellStyleHeaderData);
		
		sheetHistorical.addMergedRegion(new CellRangeAddress(rowSheetHistoricalCount, rowSheetHistoricalCount, 0, 6));
		
		rowSheetHistoricalCount++;
		Row rowInfluentFansSubTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowInfluentFansSubTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellInfluentFansNameTitle = rowInfluentFansSubTitle.createCell(0);
		cellInfluentFansNameTitle.setCellValue("Nome");
		cellInfluentFansNameTitle.setCellStyle(cellSecondaryHeaderData);
		
		Cell cellInfluentFansProfileTitle = rowInfluentFansSubTitle.createCell(1);
		cellInfluentFansProfileTitle.setCellValue("Perfil no Facebook");
		cellInfluentFansProfileTitle.setCellStyle(cellSecondaryHeaderData);
		
		Cell cellInfluentFansLikesTitle = rowInfluentFansSubTitle.createCell(2);
		cellInfluentFansLikesTitle.setCellValue("Total de curtidas");
		cellInfluentFansLikesTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		Cell cellInfluentFansCommentsTitle = rowInfluentFansSubTitle.createCell(3);
		cellInfluentFansCommentsTitle.setCellValue("Total de comentários");
		cellInfluentFansCommentsTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		rowSheetHistoricalCount++;
		for(FacebookInfluentialUserDTO facebookuser : reportFacebookHistorical.getMostInfluentialFans()) {
			
			Row rowInfluentFansValues = sheetHistorical.createRow(rowSheetHistoricalCount);

			Cell cellInfluentFansNameValue = rowInfluentFansValues.createCell(0);
			cellInfluentFansNameValue.setCellValue(facebookuser.getName());
			
			Hyperlink hyperLink = createHelper.createHyperlink(Hyperlink.LINK_URL);
    		hyperLink.setAddress(facebookuser.getProfileUrl());
			
			Cell cellInfluentFansProfileValue = rowInfluentFansValues.createCell(1);
			cellInfluentFansProfileValue.setCellValue(facebookuser.getProfileUrl());
			cellInfluentFansProfileValue.setHyperlink((org.apache.poi.ss.usermodel.Hyperlink) hyperLink);
			cellInfluentFansProfileValue.setCellStyle(cellStyleHLink);
			
			Cell cellInfluentFansLikesValue = rowInfluentFansValues.createCell(2);
			cellInfluentFansLikesValue.setCellValue(facebookuser.getLikes());
			
			Cell cellInfluentFansCommentsValue = rowInfluentFansValues.createCell(3);
			cellInfluentFansCommentsValue.setCellValue(facebookuser.getComments());
			
			rowSheetHistoricalCount++;
		}
	}
	
	private void addCitiesStats() {
	
		rowSheetHistoricalCount += 2;
		
		Row rowCitiesMoreFansTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowCitiesMoreFansTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellCitiesMoreFansTitle = rowCitiesMoreFansTitle.createCell(0);
		cellCitiesMoreFansTitle.setCellValue("CIDADES COM MAIS FÃS");
		cellCitiesMoreFansTitle.setCellStyle(cellStyleHeaderData);
		
		sheetHistorical.addMergedRegion(new CellRangeAddress(rowSheetHistoricalCount, rowSheetHistoricalCount, 0, 6));
		
		rowSheetHistoricalCount++;
		Row rowCitiesMoreFansSubTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowCitiesMoreFansSubTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellCitiesMoreFansCityTitle = rowCitiesMoreFansSubTitle.createCell(0);
		cellCitiesMoreFansCityTitle.setCellValue("Cidade");
		cellCitiesMoreFansCityTitle.setCellStyle(cellSecondaryHeaderData);
		
		Cell cellCitiesMoreFansTotalTitle = rowCitiesMoreFansSubTitle.createCell(1);
		cellCitiesMoreFansTotalTitle.setCellValue("Total de fãs");
		cellCitiesMoreFansTotalTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		rowSheetHistoricalCount++;
		for(ReportFacebookCityDTO reportFacebookCity : reportFacebookHistorical.getCitiesMoreFans()) {
			
			Row rowCitiesMoreFansValues = sheetHistorical.createRow(rowSheetHistoricalCount);

			Cell cellCitiesMoreFansCityValue = rowCitiesMoreFansValues.createCell(0);
			cellCitiesMoreFansCityValue.setCellValue(reportFacebookCity.getCity());
			
			Cell cellCitiesMoreFansTotalValue = rowCitiesMoreFansValues.createCell(1);
			cellCitiesMoreFansTotalValue.setCellValue(reportFacebookCity.getValue());
			
			rowSheetHistoricalCount++;
		}
		
		rowSheetHistoricalCount += 2;
		Row rowCitiesReachedTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowCitiesReachedTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellCitiesReachedTitle = rowCitiesReachedTitle.createCell(0);
		cellCitiesReachedTitle.setCellValue("CIDADES MAIS ALCANÇADAS");
		cellCitiesReachedTitle.setCellStyle(cellStyleHeaderData);
		
		sheetHistorical.addMergedRegion(new CellRangeAddress(rowSheetHistoricalCount, rowSheetHistoricalCount, 0, 6));
		
		rowSheetHistoricalCount++;
		Row rowCitiesReachedSubTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowCitiesReachedSubTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellCitiesReachedCityTitle = rowCitiesReachedSubTitle.createCell(0);
		cellCitiesReachedCityTitle.setCellValue("Cidade");
		cellCitiesReachedCityTitle.setCellStyle(cellSecondaryHeaderData);
		
		Cell cellCitiesReachedTotalTitle = rowCitiesReachedSubTitle.createCell(1);
		cellCitiesReachedTotalTitle.setCellValue("Total de usuários");
		cellCitiesReachedTotalTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		rowSheetHistoricalCount++;
		for(ReportFacebookCityDTO reportFacebookCity : reportFacebookHistorical.getCitiesMoreReached()) {
			
			Row rowCitiesReachedValues = sheetHistorical.createRow(rowSheetHistoricalCount);

			Cell cellCitiesReachedCityValue = rowCitiesReachedValues.createCell(0);
			cellCitiesReachedCityValue.setCellValue(reportFacebookCity.getCity());
			
			Cell cellCitiesReachedTotalValue = rowCitiesReachedValues.createCell(1);
			cellCitiesReachedTotalValue.setCellValue(reportFacebookCity.getValue());
			
			rowSheetHistoricalCount++;
		}
	}
	
	private void addAboutReachedUsers() {
		
		rowSheetHistoricalCount += 2;
		
		Row rowAboutReachedUsersTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowAboutReachedUsersTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellAboutReachedUsersTitle = rowAboutReachedUsersTitle.createCell(0);
		cellAboutReachedUsersTitle.setCellValue("SOBRE USUÁRIOS ALCANÇADOS");
		cellAboutReachedUsersTitle.setCellStyle(cellStyleHeaderData);
		
		sheetHistorical.addMergedRegion(new CellRangeAddress(rowSheetHistoricalCount, rowSheetHistoricalCount, 0, 6));
		
		rowSheetHistoricalCount++;
		Row rowAboutReachedUsersSubTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowAboutReachedUsersSubTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellAgeGroupTitle = rowAboutReachedUsersSubTitle.createCell(0);
		cellAgeGroupTitle.setCellValue("Faixa etária");
		cellAgeGroupTitle.setCellStyle(cellSecondaryHeaderData);
		
		Cell cellAgeGroupMaleTitle = rowAboutReachedUsersSubTitle.createCell(1);
		cellAgeGroupMaleTitle.setCellValue("Homens");
		cellAgeGroupMaleTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		Cell cellAgeGroupFemaleTitle = rowAboutReachedUsersSubTitle.createCell(2);
		cellAgeGroupFemaleTitle.setCellValue("Mulheres");
		cellAgeGroupFemaleTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		rowSheetHistoricalCount++;
		Row rowAgeThirteenSeventeenValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeThirteenSeventeenValue = rowAgeThirteenSeventeenValues.createCell(0);
		cellAgeThirteenSeventeenValue.setCellValue("13-17");
		
		Cell cellAgeThirteenSeventeenMale = rowAgeThirteenSeventeenValues.createCell(1);
		cellAgeThirteenSeventeenMale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_MALE_13_AMONG_17));
		
		Cell cellAgeThirteenSeventeenFemale = rowAgeThirteenSeventeenValues.createCell(2);
		cellAgeThirteenSeventeenFemale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_FEMALE_13_AMONG_17));
		
		rowSheetHistoricalCount++;
		Row rowAgeEighteenTwentyFourValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeEighteenTwentyFourValue = rowAgeEighteenTwentyFourValues.createCell(0);
		cellAgeEighteenTwentyFourValue.setCellValue("18-24");
		
		Cell cellAgeEighteenTwentyFourMale = rowAgeEighteenTwentyFourValues.createCell(1);
		cellAgeEighteenTwentyFourMale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_MALE_18_AMONG_24));
		
		Cell cellAgeEighteenTwentyFourFemale = rowAgeEighteenTwentyFourValues.createCell(2);
		cellAgeEighteenTwentyFourFemale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_FEMALE_18_AMONG_24));
		
		rowSheetHistoricalCount++;
		Row rowAgeTwentyFiveThirtyFourValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeTwentyFiveThirtyFourValue = rowAgeTwentyFiveThirtyFourValues.createCell(0);
		cellAgeTwentyFiveThirtyFourValue.setCellValue("25-34");
		
		Cell cellAgeTwentyFiveThirtyFourMale = rowAgeTwentyFiveThirtyFourValues.createCell(1);
		cellAgeTwentyFiveThirtyFourMale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_MALE_25_AMONG_34));
		
		Cell cellAgeTwentyFiveThirtyFourFemale = rowAgeTwentyFiveThirtyFourValues.createCell(2);
		cellAgeTwentyFiveThirtyFourFemale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_FEMALE_25_AMONG_34));
		
		rowSheetHistoricalCount++;
		Row rowAgeThirtyFiveFortyFourValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeThirtyFiveFortyFourValue = rowAgeThirtyFiveFortyFourValues.createCell(0);
		cellAgeThirtyFiveFortyFourValue.setCellValue("35-44");
		
		Cell cellAgeThirtyFiveFortyFourMale = rowAgeThirtyFiveFortyFourValues.createCell(1);
		cellAgeThirtyFiveFortyFourMale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_MALE_35_AMONG_44));
		
		Cell cellAgeThirtyFiveFortyFourFemale = rowAgeThirtyFiveFortyFourValues.createCell(2);
		cellAgeThirtyFiveFortyFourFemale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_FEMALE_35_AMONG_44));
		
		rowSheetHistoricalCount++;
		Row rowAgeFortyFiveFiftyFourValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeFortyFiveFiftyFourValue = rowAgeFortyFiveFiftyFourValues.createCell(0);
		cellAgeFortyFiveFiftyFourValue.setCellValue("45-54");
		
		Cell cellAgeFortyFiveFiftyFourMale = rowAgeFortyFiveFiftyFourValues.createCell(1);
		cellAgeFortyFiveFiftyFourMale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_MALE_45_AMONG_54));
		
		Cell cellAgeFortyFiveFiftyFourFemale = rowAgeFortyFiveFiftyFourValues.createCell(2);
		cellAgeFortyFiveFiftyFourFemale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_FEMALE_45_AMONG_54));
		
		rowSheetHistoricalCount++;
		Row rowAgeFiftyFiveSixtyFourValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeFiftyFiveSixtyFourValue = rowAgeFiftyFiveSixtyFourValues.createCell(0);
		cellAgeFiftyFiveSixtyFourValue.setCellValue("55-64");
		
		Cell cellAgeFiftyFiveSixtyFourMale = rowAgeFiftyFiveSixtyFourValues.createCell(1);
		cellAgeFiftyFiveSixtyFourMale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_MALE_55_AMONG_64));
		
		Cell cellAgeFiftyFiveSixtyFourFemale = rowAgeFiftyFiveSixtyFourValues.createCell(2);
		cellAgeFiftyFiveSixtyFourFemale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_FEMALE_55_AMONG_64));
		
		rowSheetHistoricalCount++;
		Row rowAgeSixtyFivePlusValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeSixtyFivePlusValue = rowAgeSixtyFivePlusValues.createCell(0);
		cellAgeSixtyFivePlusValue.setCellValue("65+");
		
		Cell cellAgeSixtyFivePlusMale = rowAgeSixtyFivePlusValues.createCell(1);
		cellAgeSixtyFivePlusMale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_MALE_65_PLUS));
		
		Cell cellAgeSixtyFivePlusFemale = rowAgeSixtyFivePlusValues.createCell(2);
		cellAgeSixtyFivePlusFemale.setCellValue(reportFacebookHistorical.getAboutReachedUsers().get(ReportDetailedFacebookDTO.PAGE_IMPRESSIONS_FEMALE_65_PLUS));
		
		rowSheetHistoricalCount += 2;
		Row rowMajorAgeGroupFans = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowMajorAgeGroupFans.setHeightInPoints(headerDataRowHeight);
		
		Cell cellMajorAgeGroupFansTitle = rowMajorAgeGroupFans.createCell(0);
		cellMajorAgeGroupFansTitle.setCellValue("Maior faixa etária:");
		cellMajorAgeGroupFansTitle.setCellStyle(cellStylePreAnalysis);
		
		Cell cellMajorAgeGroupFansValue = rowMajorAgeGroupFans.createCell(1);
		cellMajorAgeGroupFansValue.setCellValue(reportFacebookHistorical.getMajorAgeGroupReacheUsers().getInitialAgeGroup() + "-" + 
				reportFacebookHistorical.getMajorAgeGroupReacheUsers().getEndAgeGroup() + " / " + 
				reportFacebookHistorical.getMajorAgeGroupReacheUsers().getPercentage() + "%");
		cellMajorAgeGroupFansValue.setCellStyle(cellStylePreAnalysisResult);
		
		rowSheetHistoricalCount++;
		Row rowMenFans = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowMenFans.setHeightInPoints(headerDataRowHeight);
		
		Cell cellMenFansTitle = rowMenFans.createCell(0);
		cellMenFansTitle.setCellValue("Homens:");
		cellMenFansTitle.setCellStyle(cellStylePreAnalysis);
		
		Cell cellMenFansValue = rowMenFans.createCell(1);
		cellMenFansValue.setCellValue(reportFacebookHistorical.getMenReachedUsersPerc() + "%");
		cellMenFansValue.setCellStyle(cellStylePreAnalysisResult);
		
		rowSheetHistoricalCount++;
		Row rowWomenFans = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowWomenFans.setHeightInPoints(headerDataRowHeight);
		
		Cell cellWomenFansTitle = rowWomenFans.createCell(0);
		cellWomenFansTitle.setCellValue("Mulheres:");
		cellWomenFansTitle.setCellStyle(cellStylePreAnalysis);
		
		Cell cellWomenFansValue = rowWomenFans.createCell(1);
		cellWomenFansValue.setCellValue(reportFacebookHistorical.getWomenReachedUsersPerc() + "%");
		cellWomenFansValue.setCellStyle(cellStylePreAnalysisResult);
	}
	
	private void addAboutYourFans() {
		
		rowSheetHistoricalCount += 2;
		
		Row rowAboutYourFansTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowAboutYourFansTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellAboutYourFansTitle = rowAboutYourFansTitle.createCell(0);
		cellAboutYourFansTitle.setCellValue("SOBRE SEUS FÃS");
		cellAboutYourFansTitle.setCellStyle(cellStyleHeaderData);
		
		sheetHistorical.addMergedRegion(new CellRangeAddress(rowSheetHistoricalCount, rowSheetHistoricalCount, 0, 6));
		
		rowSheetHistoricalCount++;
		Row rowAboutYourFansSubTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowAboutYourFansSubTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellAgeGroupTitle = rowAboutYourFansSubTitle.createCell(0);
		cellAgeGroupTitle.setCellValue("Faixa etária");
		cellAgeGroupTitle.setCellStyle(cellSecondaryHeaderData);
		
		Cell cellAgeGroupMaleTitle = rowAboutYourFansSubTitle.createCell(1);
		cellAgeGroupMaleTitle.setCellValue("Homens");
		cellAgeGroupMaleTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		Cell cellAgeGroupFemaleTitle = rowAboutYourFansSubTitle.createCell(2);
		cellAgeGroupFemaleTitle.setCellValue("Mulheres");
		cellAgeGroupFemaleTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		rowSheetHistoricalCount++;
		Row rowAgeThirteenSeventeenValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeThirteenSeventeenValue = rowAgeThirteenSeventeenValues.createCell(0);
		cellAgeThirteenSeventeenValue.setCellValue("13-17");
		
		Cell cellAgeThirteenSeventeenMale = rowAgeThirteenSeventeenValues.createCell(1);
		cellAgeThirteenSeventeenMale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_MALE_13_AMONG_17));
		
		Cell cellAgeThirteenSeventeenFemale = rowAgeThirteenSeventeenValues.createCell(2);
		cellAgeThirteenSeventeenFemale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_FEMALE_13_AMONG_17));
		
		rowSheetHistoricalCount++;
		Row rowAgeEighteenTwentyFourValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeEighteenTwentyFourValue = rowAgeEighteenTwentyFourValues.createCell(0);
		cellAgeEighteenTwentyFourValue.setCellValue("18-24");
		
		Cell cellAgeEighteenTwentyFourMale = rowAgeEighteenTwentyFourValues.createCell(1);
		cellAgeEighteenTwentyFourMale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_MALE_18_AMONG_24));
		
		Cell cellAgeEighteenTwentyFourFemale = rowAgeEighteenTwentyFourValues.createCell(2);
		cellAgeEighteenTwentyFourFemale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_FEMALE_18_AMONG_24));
		
		rowSheetHistoricalCount++;
		Row rowAgeTwentyFiveThirtyFourValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeTwentyFiveThirtyFourValue = rowAgeTwentyFiveThirtyFourValues.createCell(0);
		cellAgeTwentyFiveThirtyFourValue.setCellValue("25-34");
		
		Cell cellAgeTwentyFiveThirtyFourMale = rowAgeTwentyFiveThirtyFourValues.createCell(1);
		cellAgeTwentyFiveThirtyFourMale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_MALE_25_AMONG_34));
		
		Cell cellAgeTwentyFiveThirtyFourFemale = rowAgeTwentyFiveThirtyFourValues.createCell(2);
		cellAgeTwentyFiveThirtyFourFemale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_FEMALE_25_AMONG_34));
		
		rowSheetHistoricalCount++;
		Row rowAgeThirtyFiveFortyFourValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeThirtyFiveFortyFourValue = rowAgeThirtyFiveFortyFourValues.createCell(0);
		cellAgeThirtyFiveFortyFourValue.setCellValue("35-44");
		
		Cell cellAgeThirtyFiveFortyFourMale = rowAgeThirtyFiveFortyFourValues.createCell(1);
		cellAgeThirtyFiveFortyFourMale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_MALE_35_AMONG_44));
		
		Cell cellAgeThirtyFiveFortyFourFemale = rowAgeThirtyFiveFortyFourValues.createCell(2);
		cellAgeThirtyFiveFortyFourFemale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_FEMALE_35_AMONG_44));
		
		rowSheetHistoricalCount++;
		Row rowAgeFortyFiveFiftyFourValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeFortyFiveFiftyFourValue = rowAgeFortyFiveFiftyFourValues.createCell(0);
		cellAgeFortyFiveFiftyFourValue.setCellValue("45-54");
		
		Cell cellAgeFortyFiveFiftyFourMale = rowAgeFortyFiveFiftyFourValues.createCell(1);
		cellAgeFortyFiveFiftyFourMale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_MALE_45_AMONG_54));
		
		Cell cellAgeFortyFiveFiftyFourFemale = rowAgeFortyFiveFiftyFourValues.createCell(2);
		cellAgeFortyFiveFiftyFourFemale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_FEMALE_45_AMONG_54));
		
		rowSheetHistoricalCount++;
		Row rowAgeFiftyFiveSixtyFourValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeFiftyFiveSixtyFourValue = rowAgeFiftyFiveSixtyFourValues.createCell(0);
		cellAgeFiftyFiveSixtyFourValue.setCellValue("55-64");
		
		Cell cellAgeFiftyFiveSixtyFourMale = rowAgeFiftyFiveSixtyFourValues.createCell(1);
		cellAgeFiftyFiveSixtyFourMale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_MALE_55_AMONG_64));
		
		Cell cellAgeFiftyFiveSixtyFourFemale = rowAgeFiftyFiveSixtyFourValues.createCell(2);
		cellAgeFiftyFiveSixtyFourFemale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_FEMALE_55_AMONG_64));
		
		rowSheetHistoricalCount++;
		Row rowAgeSixtyFivePlusValues = sheetHistorical.createRow(rowSheetHistoricalCount);

		Cell cellAgeSixtyFivePlusValue = rowAgeSixtyFivePlusValues.createCell(0);
		cellAgeSixtyFivePlusValue.setCellValue("65+");
		
		Cell cellAgeSixtyFivePlusMale = rowAgeSixtyFivePlusValues.createCell(1);
		cellAgeSixtyFivePlusMale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_MALE_65_PLUS));
		
		Cell cellAgeSixtyFivePlusFemale = rowAgeSixtyFivePlusValues.createCell(2);
		cellAgeSixtyFivePlusFemale.setCellValue(reportFacebookHistorical.getAboutYourFans().get(ReportDetailedFacebookDTO.PAGE_FANS_FEMALE_65_PLUS));
		
		rowSheetHistoricalCount += 2;
		Row rowMajorAgeGroupFans = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowMajorAgeGroupFans.setHeightInPoints(headerDataRowHeight);
		
		Cell cellMajorAgeGroupFansTitle = rowMajorAgeGroupFans.createCell(0);
		cellMajorAgeGroupFansTitle.setCellValue("Maior faixa etária:");
		cellMajorAgeGroupFansTitle.setCellStyle(cellStylePreAnalysis);
		
		Cell cellMajorAgeGroupFansValue = rowMajorAgeGroupFans.createCell(1);
		cellMajorAgeGroupFansValue.setCellValue(reportFacebookHistorical.getMajorAgeGroupFans().getInitialAgeGroup() + "-" + 
				reportFacebookHistorical.getMajorAgeGroupFans().getEndAgeGroup() + " / " + 
				reportFacebookHistorical.getMajorAgeGroupFans().getPercentage() + "%");
		cellMajorAgeGroupFansValue.setCellStyle(cellStylePreAnalysisResult);
		
		rowSheetHistoricalCount++;
		Row rowMenFans = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowMenFans.setHeightInPoints(headerDataRowHeight);
		
		Cell cellMenFansTitle = rowMenFans.createCell(0);
		cellMenFansTitle.setCellValue("Homens:");
		cellMenFansTitle.setCellStyle(cellStylePreAnalysis);
		
		Cell cellMenFansValue = rowMenFans.createCell(1);
		cellMenFansValue.setCellValue(reportFacebookHistorical.getMenFansPerc() + "%");
		cellMenFansValue.setCellStyle(cellStylePreAnalysisResult);
		
		rowSheetHistoricalCount++;
		Row rowWomenFans = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowWomenFans.setHeightInPoints(headerDataRowHeight);
		
		Cell cellWomenFansTitle = rowWomenFans.createCell(0);
		cellWomenFansTitle.setCellValue("Mulheres:");
		cellWomenFansTitle.setCellStyle(cellStylePreAnalysis);
		
		Cell cellWomenFansValue = rowWomenFans.createCell(1);
		cellWomenFansValue.setCellValue(reportFacebookHistorical.getWomenFansPerc() + "%");
		cellWomenFansValue.setCellStyle(cellStylePreAnalysisResult);
	}
	
	private void addFanPageGrowth() {
		
		rowSheetHistoricalCount = 2;
		
		Row rowFanPageGrowthTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowFanPageGrowthTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellFanPageGrowthTitle = rowFanPageGrowthTitle.createCell(0);
		cellFanPageGrowthTitle.setCellValue("CRESCIMENTO DE FÃS NA PÁGINA");
		cellFanPageGrowthTitle.setCellStyle(cellStyleHeaderData);
		
		sheetHistorical.addMergedRegion(new CellRangeAddress(rowSheetHistoricalCount, rowSheetHistoricalCount, 0, 6));
		
		rowSheetHistoricalCount++;
		Row rowFanPageGrowthSubTitle = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowFanPageGrowthSubTitle.setHeightInPoints(headerDataRowHeight);
		
		Cell cellFanPageGrowthDateTitle = rowFanPageGrowthSubTitle.createCell(0);
		cellFanPageGrowthDateTitle.setCellValue("Mês e ano");
		cellFanPageGrowthDateTitle.setCellStyle(cellSecondaryHeaderData);
		
		Cell cellFanPageGrowthTotalTitle = rowFanPageGrowthSubTitle.createCell(1);
		cellFanPageGrowthTotalTitle.setCellValue("Total de fãs");
		cellFanPageGrowthTotalTitle.setCellStyle(cellSecondaryHeaderNumber);
		
		Long accumulatedFanPageGrowth = reportFacebookHistorical.getFansUntilOneYearAgo();
		rowSheetHistoricalCount++;
		for (br.com.opsocial.ejb.entity.report.FanPageGrowth fanPageGrowth : reportFacebookHistorical.getFanPageGrowth()) {

			accumulatedFanPageGrowth = accumulatedFanPageGrowth + fanPageGrowth.getSum();
			
			Row rowFanPageGrowthValues = sheetHistorical.createRow(rowSheetHistoricalCount);

			Cell cellFanPageGrowthDateValue = rowFanPageGrowthValues.createCell(0);
			cellFanPageGrowthDateValue.setCellValue(fanPageGrowth.getMonth() + "/" + fanPageGrowth.getYear());
			
			Cell cellFanPageGrowthTotalValue = rowFanPageGrowthValues.createCell(1);
			cellFanPageGrowthTotalValue.setCellValue(accumulatedFanPageGrowth);
			
			rowSheetHistoricalCount++;
		}
		
		rowSheetHistoricalCount++;
		Row rowMajorGrowth = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowMajorGrowth.setHeightInPoints(headerDataRowHeight);
		
		Cell cellMajorGrowthTitle = rowMajorGrowth.createCell(0);
		cellMajorGrowthTitle.setCellValue("Maior crescimento:");
		cellMajorGrowthTitle.setCellStyle(cellStylePreAnalysis);
		
		Cell cellMajorGrowthValue = rowMajorGrowth.createCell(1);
		cellMajorGrowthValue.setCellValue(reportFacebookHistorical.getMajorFanPageGrowth().getMonth() + "/" + 
				reportFacebookHistorical.getMajorFanPageGrowth().getYear());
		cellMajorGrowthValue.setCellStyle(cellStylePreAnalysisResult);
		
		rowSheetHistoricalCount++;
		Row rowMinorGrowth = sheetHistorical.createRow(rowSheetHistoricalCount);
		rowMinorGrowth.setHeightInPoints(headerDataRowHeight);
		
		Cell cellMinorGrowthTitle = rowMinorGrowth.createCell(0);
		cellMinorGrowthTitle.setCellValue("Menor crescimento:");
		cellMinorGrowthTitle.setCellStyle(cellStylePreAnalysis);
		
		Cell cellMinorGrowthValue = rowMinorGrowth.createCell(1);
		cellMinorGrowthValue.setCellValue(reportFacebookHistorical.getMinorFanPageGrowth().getMonth() + "/" + 
				reportFacebookHistorical.getMinorFanPageGrowth().getYear());
		cellMinorGrowthValue.setCellStyle(cellStylePreAnalysisResult);
	}

	private void addMainHeader(Sheet sheetDataPosts, String text, int untilColumn) {

		Row row = sheetDataPosts.createRow(0);
		row.setHeightInPoints((2 * sheetDataPosts.getDefaultRowHeightInPoints()));

		Cell cellURL = row.createCell(0);
		cellURL.setCellValue(text);
		cellURL.setCellStyle(cellStyleHeader);

		sheetDataPosts.addMergedRegion(new CellRangeAddress(0, 0, 0, untilColumn));
	}

	private void initiateDefautStyles() {

		fontHeader = wb.createFont();
		fontHeader.setFontHeightInPoints((short) 12);
		fontHeader.setBold(true);
		fontHeader.setColor(IndexedColors.WHITE.index);

		HSSFPalette palette = wb.getCustomPalette();
		palette.setColorAtIndex(IndexedColors.SKY_BLUE.index, (byte) 102, (byte) 153, (byte) 204);
		palette.setColorAtIndex(IndexedColors.YELLOW.index, (byte) 255, (byte) 211, (byte) 32);
		palette.setColorAtIndex(IndexedColors.GREEN.index, (byte) 174, (byte) 207, (byte) 0);

		cellStyleHeader = wb.createCellStyle();
		cellStyleHeader.setFillForegroundColor(IndexedColors.SKY_BLUE.index);
		cellStyleHeader.setFillPattern(CellStyle.SOLID_FOREGROUND);
		cellStyleHeader.setFont(fontHeader);
		cellStyleHeader.setBorderBottom(CellStyle.BORDER_THIN);
		cellStyleHeader.setBorderTop(CellStyle.BORDER_THIN);
		cellStyleHeader.setBorderLeft(CellStyle.BORDER_THIN);
		cellStyleHeader.setBorderRight(CellStyle.BORDER_THIN);
		cellStyleHeader.setVerticalAlignment(CellStyle.VERTICAL_CENTER);

		fontHeaderData = wb.createFont();
		fontHeaderData.setFontHeightInPoints((short) 11);
		fontHeaderData.setBold(true);

		cellStyleHeaderData = wb.createCellStyle();
		cellStyleHeaderData.setFillForegroundColor(IndexedColors.YELLOW.index);
		cellStyleHeaderData.setFillPattern(CellStyle.SOLID_FOREGROUND);
		cellStyleHeaderData.setFont(fontHeaderData);

		cellStyleHeaderDataPositive = wb.createCellStyle();
		cellStyleHeaderDataPositive.setFillForegroundColor(IndexedColors.GREEN.index);
		cellStyleHeaderDataPositive.setFillPattern(CellStyle.SOLID_FOREGROUND);
		cellStyleHeaderDataPositive.setFont(fontHeaderData);

		cellStyleHeaderDataNegative = wb.createCellStyle();
		cellStyleHeaderDataNegative.setFillForegroundColor(IndexedColors.RED.index);
		cellStyleHeaderDataNegative.setFillPattern(CellStyle.SOLID_FOREGROUND);
		cellStyleHeaderDataNegative.setFont(fontHeaderData);

		cellSecondaryHeaderData = wb.createCellStyle();
		cellSecondaryHeaderData.setFont(fontHeaderData);

		cellSecondaryHeaderNumber = wb.createCellStyle();
		cellSecondaryHeaderNumber.setFont(fontHeaderData);
		cellSecondaryHeaderNumber.setAlignment(CellStyle.ALIGN_RIGHT);

		cellSecondaryHeaderCenter = wb.createCellStyle();
		cellSecondaryHeaderCenter.setFont(fontHeaderData);
		cellSecondaryHeaderCenter.setAlignment(CellStyle.ALIGN_CENTER);

		cellStylePreAnalysis = wb.createCellStyle();
		cellStylePreAnalysis.setFillForegroundColor(IndexedColors.GREY_25_PERCENT.index);
		cellStylePreAnalysis.setFillPattern(CellStyle.SOLID_FOREGROUND);
		cellStylePreAnalysis.setFont(fontHeaderData);

		cellStylePreAnalysisResult = wb.createCellStyle();
		cellStylePreAnalysisResult.setFillForegroundColor(IndexedColors.GREY_25_PERCENT.index);
		cellStylePreAnalysisResult.setFillPattern(CellStyle.SOLID_FOREGROUND);
		cellStylePreAnalysisResult.setAlignment(CellStyle.ALIGN_RIGHT);

		createHelper = wb.getCreationHelper();

		cellDateStyle = wb.createCellStyle();
		cellDateStyle.setDataFormat(
				createHelper.createDataFormat().getFormat("dd/mm/yyyy hh:mm"));

		//by default hyperlinks are blue and underlined
		cellStyleHLink = wb.createCellStyle();

		Font fontHLink = wb.createFont();
		fontHLink.setUnderline(Font.U_SINGLE);
		fontHLink.setColor(IndexedColors.BLUE.getIndex());

		cellStyleHLink.setFont(fontHLink);

		cellDataPercentage = wb.createCellStyle();
		cellDataPercentage.setAlignment(CellStyle.ALIGN_RIGHT);
	}

	public String getFileName() {
		return fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	public String getFormattedFileName() {
		return formattedFileName;
	}

	public void setFormattedFileName(String formattedFileName) {
		this.formattedFileName = formattedFileName;
	}

}
