package br.com.opsocial.server.actions.sets;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.OptimisticLockException;

import br.com.opsocial.ejb.das.MaintenanceProfileRemote;
import br.com.opsocial.ejb.das.MaintenanceSetRemote;
import br.com.opsocial.ejb.entity.application.Profile;
import br.com.opsocial.ejb.entity.application.User;
import br.com.opsocial.ejb.entity.sets.Post;
import br.com.opsocial.ejb.entity.sets.Set;
import br.com.opsocial.server.services.ServerAction;
import br.com.opsocial.server.utils.RecoverMaintenance;
import br.com.opsocial.server.utils.UtilFunctions;

public class ListSetsAction extends ServerAction {
	
	@Override
	public void doAction() throws Exception, OptimisticLockException {

		User user = (User) getSession().getAttribute("user");
		
		List<Character> types = new ArrayList<Character>();
		types.add(Profile.TWITTER);
		
		MaintenanceProfileRemote remote = (MaintenanceProfileRemote) RecoverMaintenance.recoverMaintenance("Profile");

		List<Profile> profiles = remote.getEntityByNetworkType(types, user.getAccount().getIdAccount());

		List<Profile> profileDTOs = new ArrayList<Profile>();
		
		for(Profile profile : profiles) {
			if(profile.isActive()) {
				profile.setAvatar(UtilFunctions.getNetworkAvatar(profile));
			}
			
			profileDTOs.add(profile);
		}

		
		MaintenanceSetRemote setRemote = (MaintenanceSetRemote) RecoverMaintenance.recoverMaintenance("Set");

		List<Set> sets = setRemote.listByAccount(user.getAccount().getIdAccount());

		List<Set> setDTOs = new ArrayList<Set>();
	
		for(Set set : sets) {
			for(Post post : set.getPosts()) {
				post.setFormattedPost(UtilFunctions.applyFormattingInSetPosts(post.getText()));
			}
			
			setDTOs.add(set);
		}
		
		getParameters().put("profiles", profileDTOs);
		getParameters().put("sets", setDTOs);
	}
}
