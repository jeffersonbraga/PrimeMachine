package br.com.opsocial.server.actions.upload;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

import javax.servlet.ServletException;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import br.com.opsocial.ejb.entity.application.Profile;
import br.com.opsocial.ejb.entity.sets.Post;
import br.com.opsocial.server.actions.application.ComposeAction;

@RestController
@RequestMapping("api")
public class UploadPictureAction {

	private static final long serialVersionUID = 1L;
	private static final long SIZE_LIMIT = 2097152L;
	private String contentType;
	
	private final static String IMG_JPEG = "image/jpeg";
	private final static String IMG_PNG = "image/png";

    private Path rootLocation;

	@CrossOrigin
	@RequestMapping(value = "/uploadpicture",
	    method = RequestMethod.POST,
	    produces = MediaType.APPLICATION_JSON_VALUE,
	    consumes = MediaType.MULTIPART_FORM_DATA_VALUE)
	protected void uploadPicture(@RequestParam("file") MultipartFile file) throws Exception, ServletException, IOException {

		this.rootLocation = Paths.get("D:\\wildfly-10.1.0.Final\\standalone\\deployments\\OpSocialBack.war\\opsocial\\images\\temp");
        try {
            if (file.isEmpty()) {
                throw new Exception("Failed to store empty file " + file.getOriginalFilename());
            }
            Files.copy(file.getInputStream(), this.rootLocation.resolve(file.getOriginalFilename()));
        } catch (IOException e) {
            throw new Exception("Failed to store file " + file.getOriginalFilename(), e);
        }
	}

	private String getImageExtension(String contentType) {

		String imageExtension = "";

		if(contentType.equals(IMG_JPEG)) {
			imageExtension = "jpg";
		} else if(contentType.equals(IMG_PNG)) {
			imageExtension = "png";
		}

		return imageExtension;
	}
}