package br.com.opsocial.server.actions.monitorings;

import java.util.HashMap;
import java.util.List;

import javax.persistence.OptimisticLockException;

import br.com.opsocial.client.entity.mount.MountDTO;
import br.com.opsocial.ejb.das.MaintenanceColorTagRemote;
import br.com.opsocial.ejb.das.MaintenanceMonitoringRemote;
import br.com.opsocial.ejb.das.MaintenanceMonitoringTagRemote;
import br.com.opsocial.ejb.entity.monitoring.ColorTag;
import br.com.opsocial.ejb.entity.monitoring.Monitoring;
import br.com.opsocial.ejb.entity.monitoring.MonitoringTag;
import br.com.opsocial.server.services.ServerAction;
import br.com.opsocial.server.utils.RecoverMaintenance;

public class EditTagsAction extends ServerAction {

	@Override
	public void doAction() throws Exception, OptimisticLockException {
		
		Long idMonitoring = ((br.com.opsocial.client.entity.primitive.Long) getParameters().get("idMonitoring")).getValue();
		Long idAccount = ((br.com.opsocial.client.entity.primitive.Long) getParameters().get("idAccount")).getValue();

		setParameters(new HashMap<String, Object>());
		
		MaintenanceMonitoringRemote monitoringRemote = (MaintenanceMonitoringRemote) 
				RecoverMaintenance.recoverMaintenance("Monitoring");
		
		MaintenanceMonitoringTagRemote monitoringTagRemote = (MaintenanceMonitoringTagRemote) 
				RecoverMaintenance.recoverMaintenance("MonitoringTag");
		
		MaintenanceColorTagRemote colorTagRemote = (MaintenanceColorTagRemote)
				RecoverMaintenance.recoverMaintenance("ColorTag");
		
		List<MonitoringTag> globalMonitoringTags = monitoringTagRemote.listGlobalTags(idAccount);
		List<MonitoringTag> monitoringTags = monitoringTagRemote.listForMonitoring(idMonitoring, idAccount);
		List<ColorTag> colorTags = colorTagRemote.getAll();
		Monitoring monitoring = monitoringRemote.getById(idMonitoring);
		
		getParameters().put("globalMonitoringTags", MountDTO.mountMonitoringTag(globalMonitoringTags));
		getParameters().put("monitoringTags", MountDTO.mountMonitoringTag(monitoringTags));
		getParameters().put("colorTags", MountDTO.mountColorTag(colorTags));
		getParameters().put("monitoring", MountDTO.mountMonitoring(monitoring));
	}

}
