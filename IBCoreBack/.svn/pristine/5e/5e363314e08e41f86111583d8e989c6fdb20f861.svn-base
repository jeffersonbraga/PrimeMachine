package br.com.opsocial.server.actions.profiles;

import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import br.com.opsocial.client.entity.primitive.Boolean;
import br.com.opsocial.client.entity.primitive.StringUtil;
import br.com.opsocial.server.services.AuthFacebookCallbackServlet;
import br.com.opsocial.server.services.ServerAction;
import br.com.opsocial.server.utils.networksintegrations.FacebookIntegration;
import entity.application.Profile;
import entity.generic.Persistent;
import facebook4j.Facebook;

@RestController
@RequestMapping("opsocial")
public class RefreshTokenByFaceAction extends ServerAction {

	@Override
	@RequestMapping(value = "/refresh_tokenby_face",
    method = RequestMethod.GET,
    produces = MediaType.APPLICATION_JSON_VALUE)
	public void doAction() throws Exception {
		
		getSession().setAttribute("facebook_auth_action", AuthFacebookCallbackServlet.REFRESH_TOKEN);
		getSession().setAttribute("alr_rec_facebook", new Boolean(false));
		getSession().setAttribute("profile", (Profile) getParameters().get("profile"));
		
		Facebook facebook = new FacebookIntegration().getFacebookSystem();
		facebook.setOAuthPermissions(FacebookIntegration.APP_PERMISSIONS);
		
		getRequest().getSession().setAttribute("facebook", facebook);
		
		String callbackURL = Persistent.SERVER_PATH + "/opsocial/authFacebookCallback";
		
		StringUtil oauthURL =  new StringUtil(facebook.getOAuthAuthorizationURL(callbackURL.toString()));
		
		getParameters().put("authenticationurl", oauthURL);
	}
}
