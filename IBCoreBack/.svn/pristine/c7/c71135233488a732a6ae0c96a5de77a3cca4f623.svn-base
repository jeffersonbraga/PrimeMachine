package br.com.opsocial.server.actions.mailbox;

import java.util.Date;

import javax.persistence.OptimisticLockException;

import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import br.com.opsocial.client.entity.primitive.Boolean;
import br.com.opsocial.ejb.das.MaintenanceAccountRemote;
import br.com.opsocial.ejb.entity.application.Account;
import br.com.opsocial.server.services.ServerAction;
import br.com.opsocial.server.utils.RecoverMaintenance;
import br.com.opsocial.server.utils.mailbox.TaskUpdateProfileConversations;

@RestController
@RequestMapping("opsocial")
public class SacUseUpdateAction extends ServerAction {
	
	@Override
	@RequestMapping(value = "/sac_use_update",
    method = RequestMethod.GET,
    produces = MediaType.APPLICATION_JSON_VALUE)
	public void doAction() throws Exception, OptimisticLockException {

		if(!getUser().getAccount().getUsesSac()) {
		
			MaintenanceAccountRemote remote = (MaintenanceAccountRemote) RecoverMaintenance.recoverMaintenance("Account");
			
			Account account = remote.getById(getUser().getAccount().getIdAccount());
			
			account.setUsesSac(true);
			account.setSacLastUse(new Date());
			
			remote.save(account);
			
			new Thread(new TaskUpdateProfileConversations(account)).start();
			
			getParameters().put("usesSac", new Boolean(false));
		}
	}
}
