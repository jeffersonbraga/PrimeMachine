package br.com.opsocial.server.actions.reports.twitter;

import java.util.HashMap;
import java.util.Map;

import javax.persistence.OptimisticLockException;

import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import br.com.opsocial.ejb.das.MaintenanceTwitterFollowerRemote;
import br.com.opsocial.server.services.ServerAction;
import br.com.opsocial.server.utils.RecoverMaintenance;

@RestController
@RequestMapping("opsocial")
public class UpdateFollowersCitiesAction extends ServerAction {

	@Override
	@RequestMapping(value = "/update_followers_cities",
    method = RequestMethod.GET,
    produces = MediaType.APPLICATION_JSON_VALUE)
	public void doAction() throws Exception, OptimisticLockException {
		
		Long idProfile = ((br.com.opsocial.client.entity.primitive.Long) getParameters().get("idProfile")).getValue();
		
		Integer offset = (Integer) getParameters().get("offset");
		Integer limit = (Integer) getParameters().get("limit");
		
		setParameters(new HashMap<String, Object>());
		
		MaintenanceTwitterFollowerRemote twitterFollowerRemote = (MaintenanceTwitterFollowerRemote)
				RecoverMaintenance.recoverMaintenance("TwitterFollower");
		
		Map<String, Long> citiesWithMoreFollowers = twitterFollowerRemote.getCitiesWithMoreFollowers(idProfile, offset, limit);
		
		getParameters().put("citiesWithMoreFollowers", citiesWithMoreFollowers);
		
	}

}
