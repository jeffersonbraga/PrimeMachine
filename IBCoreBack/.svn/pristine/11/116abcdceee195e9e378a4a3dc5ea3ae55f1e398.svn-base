package br.com.opsocial.server.actions.profiles;

import javax.persistence.OptimisticLockException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import br.com.opsocial.OpSocialBackApplication;
import br.com.opsocial.ejb.entity.application.Profile;
import br.com.opsocial.ejb.entity.generic.Persistent;
import br.com.opsocial.server.services.AuthFacebookCallbackServlet;
import br.com.opsocial.server.utils.networksintegrations.InstagramIntegration;

@RestController
@RequestMapping("opsocial")
public class RefreshTokenByInstagramAction {

	@CrossOrigin
	@RequestMapping(value = "/refresh_tokenby_instagram",
    method = RequestMethod.PUT,
    produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<String> doAction(@Valid @RequestBody Profile profile, HttpSession session, HttpServletRequest request) throws Exception, OptimisticLockException {
		
		session.setAttribute("instagram_auth_action", AuthFacebookCallbackServlet.REFRESH_TOKEN);
		session.setAttribute("alr_rec_instagram", new Boolean(false));
		session.setAttribute("profile_instagram", profile);
		
		String authenticationURL = "https://api.instagram.com/oauth/authorize/?client_id=" + 
				InstagramIntegration.CLIENT_ID + "&redirect_uri=" + OpSocialBackApplication.SERVER_PATH + "/opsocial/instagram&response_type=code&scope=likes+basic+public_content+follower_list";
		
		return new ResponseEntity<String>(authenticationURL, HttpStatus.OK);
	}

}
