{"version":3,"sources":["webpack:///./src/app/customer/customer.module.ts","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/customer/customerDetails.component.ts","webpack:///./src/app/customer/customerEdit.component.ts","webpack:///./src/app/customer/customerOrders.component.ts","webpack:///./src/app/customer/customer.routing.ts","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customerDetails.component.html","webpack:///./src/app/customer/customerEdit.component.html","webpack:///./src/app/customer/customerOrders.component.html"],"names":[],"mappings":"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","file":"3.chunk.js","sourcesContent":["import { NgModule }      from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CustomerComponent } from './customer.component';\nimport { CustomerDetailsComponent } from './customerDetails.component';\nimport { CustomerEditComponent } from './customerEdit.component';\nimport { CustomerOrdersComponent } from './customerOrders.component';\nimport { SharedModule }   from '../shared/shared.module';\nimport { customer_routing } from './customer.routing';\n\n@NgModule({\n  imports:      [ CommonModule, customer_routing, SharedModule ],\n  declarations: [ CustomerComponent, CustomerDetailsComponent, \n                  CustomerEditComponent, CustomerOrdersComponent ]\n})\nexport default class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customer.module.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({ \n  moduleId: module.id,\n  selector: 'orders',\n  templateUrl: 'customer.component.html'\n})\nexport class CustomerComponent implements OnInit {\n  \n    displayMode: CustomerDisplayModeEnum;\n    displayModeEnum = CustomerDisplayModeEnum;\n  \n    constructor(private router: Router) { }\n\n    ngOnInit() {\n      //Next line needs a better technique. This is the easiest way\n      //to get child route path that I've found so far.\n      //Hoping this will be easier with later builds of router\n      const path = this.router.url.split('/')[3];\n      switch (path) {\n        case 'details':\n          this.displayMode = CustomerDisplayModeEnum.Details;\n          break;\n        case 'orders':\n          this.displayMode = CustomerDisplayModeEnum.Orders;\n          break;\n        case 'edit':\n          this.displayMode = CustomerDisplayModeEnum.Edit;\n          break;\n      }\n    }\n\n}\n\nenum CustomerDisplayModeEnum {\n  Details=0,\n  Orders=1,\n  Edit=2\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customer.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { ICustomer } from '../shared/interfaces';\nimport { DataService } from '../../app/core/services/data.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'customer-details',\n  templateUrl: 'customerDetails.component.html'\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  customer: ICustomer;\n  private sub: Subscription;\n\n  constructor(private route: ActivatedRoute, private dataService: DataService) { }\n\n  ngOnInit() {\n      //Subscribe to params so if it changes we pick it up. Don't technically need that here\n      //since param won't be changing while component is alive. Could use this.route.snapshot.parent.params[\"id\"] to simplify it.\n      this.sub = this.route.parent.params.subscribe(params => {\n        let id = +params['id'];\n        this.dataService.getCustomer(id)\n            .subscribe((customer: ICustomer) => this.customer = customer);\n      });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customerDetails.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { DataService } from '../../app/core/services/data.service';\nimport { ICustomer, IState } from '../shared/interfaces';\n\n@Component({\n  moduleId: module.id,\n  selector: 'customer-edit',\n  templateUrl: 'customerEdit.component.html'\n})\nexport class CustomerEditComponent implements OnInit {\n\n  customer: ICustomer = \n  {\n    id: 0,\n    firstName: '',\n    lastName: '',\n    gender: '',\n    address: '',\n    city: '',\n    state: {\n        abbreviation: '',\n        name: ''\n    }\n  };\n  states: IState[];\n  errorMessage: string;\n  sub: Subscription;\n  \n  constructor(private router: Router, \n              private route: ActivatedRoute, \n              private dataService: DataService) { }\n\n  ngOnInit() {\n      //Subscribe to params so if it changes we pick it up. Don't technically need that here\n      //since param won't be changing while component is alive. Could use this.route.snapshot.parent.params[\"id\"] to simplify it.\n      this.sub = this.route.parent.params.subscribe(params => {\n        let id = +params['id'];\n        this.dataService.getCustomer(id).subscribe((customer: ICustomer) => {\n          //Quick and dirty clone used in case user cancels out of form\n          const cust = JSON.stringify(customer);\n          this.customer = JSON.parse(cust);\n        });\n      });\n\n      this.dataService.getStates().subscribe((states: IState[]) => this.states = states);\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  \n  onSubmit() {\n      this.dataService.updateCustomer(this.customer)\n        .subscribe((status: boolean) => {\n          if (status) {\n            this.router.navigate(['/']);\n          }\n          else {\n            this.errorMessage = 'Unable to save customer';\n          }\n      });\n  }\n  \n  onCancel(event: Event) {\n    event.preventDefault();\n    this.router.navigate(['/']);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customerEdit.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { DataService } from '../../app/core/services/data.service';\nimport { ICustomer, IOrder, IOrderItem } from '../shared/interfaces';\n\n@Component({\n  moduleId: module.id,\n  selector: 'customer-orders',\n  templateUrl: 'customerOrders.component.html'\n})\nexport class CustomerOrdersComponent implements OnInit {\n\n  filteredOrders: IOrder[] = [];\n  customer: ICustomer;\n  sub: Subscription;\n\n  constructor(private router: Router, private route: ActivatedRoute, private dataService: DataService) { }\n\n  ngOnInit() {\n      //Subscribe to params so if it changes we pick it up. Don't technically need that here\n      //since param won't be changing while component is alive. Could use this.route.snapshot.parent.params[\"id\"] to simplify it.\n      this.sub = this.route.parent.params.subscribe(params => {\n        let id = +params['id'];\n        this.dataService.getOrders(id).subscribe((orders: IOrder[]) => {\n          this.filteredOrders = orders;\n        });\n        this.dataService.getCustomer(id).subscribe((customer: ICustomer) => {\n          this.customer = customer;\n        });\n      });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  \n  orderTrackBy(index: number, order: IOrderItem) {\n    return order.id;\n  }\n  \n  orderItemTrackBy(index: number, orderItem: any) {\n    return orderItem.id;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customerOrders.component.ts","import { Routes, RouterModule } from '@angular/router';\n\nimport { CustomerComponent }   from './customer.component';\nimport { CustomerOrdersComponent } from './customerOrders.component';\nimport { CustomerDetailsComponent } from './customerDetails.component';\nimport { CustomerEditComponent } from './customerEdit.component';\n\nconst customer_routes: Routes = [\n  { \n    path: '', \n    component: CustomerComponent,\n    children: [\n      { path:'orders',  component: CustomerOrdersComponent },\n      { path:'details', component: CustomerDetailsComponent },\n      { path:'edit', component: CustomerEditComponent }\n    ]\n  }\n];\n\nexport const customer_routing = RouterModule.forChild(customer_routes);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customer.routing.ts","module.exports = \"<div class=\\\"orders view\\\">\\n    <div class=\\\"container\\\">\\n        <header>\\n            <h3><span class=\\\"glyphicon glyphicon-user\\\"></span>&nbsp;&nbsp;Customer Information</h3>\\n        </header>\\n        <br />\\n        <div class=\\\"navbar\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li class=\\\"toolbar-item\\\">\\n                    <a routerLink=\\\"details\\\" \\n                       (click)=\\\"displayMode = displayModeEnum.Details\\\" \\n                       [class.active]=\\\"displayMode === displayModeEnum.Details\\\">\\n                       <span class=\\\"glyphicon glyphicon-list\\\"></span>&nbsp;&nbsp;Customer Details\\n                    </a>\\n                </li>\\n                <li class=\\\"toolbar-item\\\">\\n                    <a routerLink=\\\"orders\\\"\\n                       (click)=\\\"displayMode = displayModeEnum.Orders\\\" \\n                       [class.active]=\\\"displayMode === displayModeEnum.Orders\\\">\\n                        <span class=\\\"glyphicon glyphicon-tags\\\"></span>&nbsp;&nbsp;Customer Orders\\n                    </a>\\n                </li>\\n                <li class=\\\"toolbar-item\\\">\\n                    <a routerLink=\\\"edit\\\"\\n                       (click)=\\\"displayMode = displayModeEnum.Edit\\\" \\n                       [class.active]=\\\"displayMode === displayModeEnum.Edit\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit edit-icon\\\"></span>&nbsp;&nbsp;Edit Customer\\n                    </a>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"container\\\">\\n            <router-outlet></router-outlet>\\n            <br />\\n            <br />\\n            <a routerLink=\\\"/\\\">View all Customers</a>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/customer.component.html\n// module id = 2355\n// module chunks = 3","module.exports = \"<div *ngIf=\\\"customer\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-1\\\">\\n      <img src=\\\"images/{{customer.gender | lowercase}}.png\\\" class=\\\"card-image\\\" />\\n    </div>\\n    <div class=\\\"col-md-11\\\">\\n      <h4>    \\n          {{ customer.firstName | capitalize }} {{ customer.lastName | capitalize }}&nbsp;          \\n      </h4>\\n      <br />\\n      {{ customer.address }}\\n      <br />\\n      {{ customer.city }}, {{ customer.state.name }}\\n    </div>\\n  </div>    \\n</div>   \\n<div *ngIf=\\\"!customer\\\" class=\\\"row\\\">\\n   No customer found\\n</div>  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/customerDetails.component.html\n// module id = 2356\n// module chunks = 3","module.exports = \"<!-- Things like #firstName=\\\"ngForm\\\" will change to #firstName=\\\"ngModel\\\" after RC2 -->\\n<div>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #customerForm=\\\"ngForm\\\" class=\\\"editForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"customer.firstName\\\" #firstName=\\\"ngModel\\\" required>\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"firstName.valid\\\">First Name is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Last Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"customer.lastName\\\" #lastName=\\\"ngModel\\\" required>\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"lastName.valid\\\">Last Name is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Address</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" [(ngModel)]=\\\"customer.address\\\" #address=\\\"ngModel\\\" required>\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"address.valid\\\">Address is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>City</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"customer.city\\\" #city=\\\"ngModel\\\" required>\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"city.valid\\\">City is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>State</label>\\n      <select class=\\\"form-control\\\" \\n              [(ngModel)]=\\\"customer.state.abbreviation\\\"\\n              name=\\\"state\\\" \\n              required>\\n          <option *ngFor=\\\"let state of states\\\" [ngValue]=\\\"state.abbreviation\\\">{{state.name}}</option>\\n      </select>\\n    </div>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onCancel($event)\\\">Cancel</button>&nbsp;&nbsp;\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!customerForm.valid\\\">Update</button>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage != null\\\">{{ errorMessage }}</div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/customerEdit.component.html\n// module id = 2357\n// module chunks = 3","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"customer\\\">\\n    <h4>Orders for {{ customer.firstName | capitalize }} {{ customer.lastName | capitalize }}</h4>\\n    <br />\\n    <table class=\\\"table table-striped table-hover orders-table\\\" *ngFor=\\\"let order of filteredOrders;trackBy:orderTrackBy\\\">\\n        <tr *ngFor=\\\"let orderItem of order.orderItems;trackBy:orderItemTrackBy\\\">\\n            <td>{{orderItem.productName}}</td>\\n            <td>${{orderItem.itemCost}}</td>    \\n        </tr>\\n    </table>\\n</div>\\n<div *ngIf=\\\"!customer\\\" class=\\\"row\\\">\\n   No customer found\\n</div>  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/customerOrders.component.html\n// module id = 2358\n// module chunks = 3"],"sourceRoot":""}